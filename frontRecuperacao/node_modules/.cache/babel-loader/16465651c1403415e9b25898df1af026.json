{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Animated, View } from 'react-native';\n\nclass BottomNavigationRouteScreen extends React.Component {\n  render() {\n    const {\n      style,\n      index,\n      children,\n      visibility,\n      ...rest\n    } = this.props;\n    const display = visibility === 0 ? 'none' : 'flex';\n    return /*#__PURE__*/React.createElement(View, _extends({\n      testID: `RouteScreen: ${index}`,\n      style: [style, {\n        display\n      }]\n    }, rest), children);\n  }\n\n}\n\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);","map":{"version":3,"sources":["BottomNavigationRouteScreen.tsx"],"names":["React","render","rest","display","visibility","index","Animated"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,EAAA,IAAA,QAAA,cAAA;;AAOA,MAAA,2BAAA,SAA0CA,KAAK,CAA/C,SAAA,CAAiE;AAC/DC,EAAAA,MAAM,GAAgB;AACpB,UAAM;AAAA,MAAA,KAAA;AAAA,MAAA,KAAA;AAAA,MAAA,QAAA;AAAA,MAAA,UAAA;AAAsC,SAAGC;AAAzC,QAAkD,KAAxD,KAAA;AAEA,UAAMC,OAAO,GAAGC,UAAU,KAAVA,CAAAA,GAAAA,MAAAA,GAAhB,MAAA;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,MAAA,MAAM,EAAG,gBAAeC,KAD1B,EAAA;AAEE,MAAA,KAAK,EAAE,CAAA,KAAA,EAAQ;AAAEF,QAAAA;AAAF,OAAR;AAFT,KAAA,EAAA,IAAA,CAAA,EADF,QACE,CADF;AASD;;AAf8D;;AAkBjE,eAAeG,QAAQ,CAARA,uBAAAA,CAAf,2BAAeA,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, View, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  visibility?: 0 | 1 | Animated.AnimatedInterpolation;\n  index: number;\n}\n\nclass BottomNavigationRouteScreen extends React.Component<Props> {\n  render(): JSX.Element {\n    const { style, index, children, visibility, ...rest } = this.props;\n\n    const display = visibility === 0 ? 'none' : 'flex';\n\n    return (\n      <View\n        testID={`RouteScreen: ${index}`}\n        style={[style, { display }]}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);\n"]},"metadata":{},"sourceType":"module"}