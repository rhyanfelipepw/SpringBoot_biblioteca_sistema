{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet, View, I18nManager } from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme, useTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Button from '../Button';\n\nconst PaginationControls = _ref => {\n  let {\n    page,\n    numberOfPages,\n    onPageChange,\n    showFastPaginationControls\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showFastPaginationControls ? /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref2 => {\n      let {\n        size,\n        color\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: page === 0,\n    onPress: () => onPageChange(0),\n    accessibilityLabel: \"page-first\"\n  }) : null, /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref3 => {\n      let {\n        size,\n        color\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: page === 0,\n    onPress: () => onPageChange(page - 1),\n    accessibilityLabel: \"chevron-left\"\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref4 => {\n      let {\n        size,\n        color\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: () => onPageChange(page + 1),\n    accessibilityLabel: \"chevron-right\"\n  }), showFastPaginationControls ? /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref5 => {\n      let {\n        size,\n        color\n      } = _ref5;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: () => onPageChange(numberOfPages - 1),\n    accessibilityLabel: \"page-last\"\n  }) : null);\n};\n\nconst PaginationDropdown = _ref6 => {\n  let {\n    numberOfItemsPerPageList,\n    numberOfItemsPerPage,\n    onItemsPerPageChange\n  } = _ref6;\n  const {\n    colors\n  } = useTheme();\n  const [showSelect, toggleSelect] = React.useState(false);\n  return /*#__PURE__*/React.createElement(Menu, {\n    visible: showSelect,\n    onDismiss: () => toggleSelect(!showSelect),\n    anchor: /*#__PURE__*/React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: () => toggleSelect(true),\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle\n    }, `${numberOfItemsPerPage}`)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(option => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: option,\n    titleStyle: option === numberOfItemsPerPage && {\n      color: colors.primary\n    },\n    onPress: () => {\n      onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n      toggleSelect(false);\n    },\n    title: option\n  })));\n};\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\n\nconst DataTablePagination = _ref7 => {\n  let {\n    label,\n    accessibilityLabel,\n    page,\n    numberOfPages,\n    onPageChange,\n    style,\n    theme,\n    showFastPaginationControls = false,\n    numberOfItemsPerPageList,\n    numberOfItemsPerPage,\n    onItemsPerPageChange,\n    selectPageDropdownLabel,\n    selectPageDropdownAccessibilityLabel,\n    ...rest\n  } = _ref7;\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && /*#__PURE__*/React.createElement(View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), /*#__PURE__*/React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange\n  })), /*#__PURE__*/React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), /*#__PURE__*/React.createElement(View, {\n    style: styles.iconsContainer\n  }, /*#__PURE__*/React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages\n  })));\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nexport default withTheme(DataTablePagination); // @component-docs ignore-next-line\n\nexport { DataTablePagination };","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["PaginationControls","showFastPaginationControls","colors","useTheme","color","I18nManager","page","onPageChange","numberOfPages","PaginationDropdown","onItemsPerPageChange","React","toggleSelect","styles","contentStyle","numberOfItemsPerPage","option","primary","DataTablePagination","rest","labelColor","theme","numberOfItemsPerPageList","optionsContainer","selectPageDropdownAccessibilityLabel","accessibilityLabel","iconsContainer","container","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","label","fontSize","marginRight","button","textAlign","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme, useTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Button from '../Button';\n\ntype Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: ReactNativePaper.Theme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const { colors } = useTheme();\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={colors.text}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={colors.text}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}